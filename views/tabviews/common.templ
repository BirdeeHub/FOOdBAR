package tabviews

import (
	"fmt"
	"FOOdBAR/views/viewutils"
)

templ MaximizeTabButton(tt viewutils.TabType) {
	<div
		hx-post={ fmt.Sprintf("%s/api/tabButton/maximize/%s", viewutils.PagePrefix, tt) }
		hx-target="#tabViewContainer"
		id={ fmt.Sprintf("tabButton_%s", tt) }
		class={ TabHeaderButtonCSS("0 0 1.5rem") }
	>
		@viewutils.Maximize()
	</div>
}

templ AddTabItemButton(tt viewutils.TabType) {
	<div
		id={ fmt.Sprintf("tabItemAdd_%s", tt.String()) }
		hx-post={ fmt.Sprintf("%s/api/itemCreateModal/open/%s", viewutils.PagePrefix, tt.String()) }
		hx-swap="beforeend"
		hx-target="body"
		class={ TabHeaderButtonCSS("0 0 1.5rem") }
	>
		@viewutils.AddCircle()
	</div>
}


templ RenderModalContent(item *viewutils.TabItem) {
	switch item.Ttype {
		case viewutils.Recipe:
			@ModalRecipeContent(item)
		case viewutils.Pantry:
			@ModalPantryContent(item)
		case viewutils.Menu:
			@ModalMenuContent(item)
		case viewutils.Shopping:
			@ModalShoppingContent(item)
		case viewutils.Preplist:
			@ModalPreplistContent(item)
		case viewutils.Earnings:
			@ModalEarningsContent(item)
		case viewutils.Customer:
			@ModalCustomerContent(item)
		case viewutils.Events:
			@ModalEventsContent(item)
	}
}

templ ItemEditModal(component templ.Component) {
	<style type="text/css">
		/***** MODAL DIALOG ****/
		#modal {
			/* Underlay covers entire screen. */
			position: fixed;
			top:0px;
			bottom: 0px;
			left:0px;
			right:0px;
			z-index:1000;

			/* Flexbox centers the .modal-content vertically and horizontally */
			display:flex;
			flex-direction:column;
			align-items:center;

			/* Animate when opening */
			animation-name: fadeIn;
			animation-duration:150ms;
			animation-timing-function: ease;
		}

		#modal > .modal-underlay {
			/* underlay takes up the entire viewport. This is only
			required if you want to click to dismiss the popup */
			background-color:rgba(0,0,0,0.5);
			position: absolute;
			z-index: -1;
			top:0px;
			bottom:0px;
			left: 0px;
			right: 0px;
		}

		#modal > .modal-content {
			/* Position visible dialog near the top of the window */
			margin-top:10vh;

			/* Sizing for visible dialog */
			width:80%;
			max-width:600px;

			/* Display properties for visible dialog*/
			border:solid 1px;
			border-radius:8px;
			box-shadow: 0px 0px 20px 0px rgba(0,0,0,0.3);
			padding:20px;

			/* Animate when opening */
			animation-name:zoomIn;
			animation-duration:150ms;
			animation-timing-function: ease;
		}

		#modal.closing {
			/* Animate when closing */
			animation-name: fadeOut;
			animation-duration:150ms;
			animation-timing-function: ease;
		}

		#modal.closing > .modal-content {
			/* Animate when closing */
			animation-name: zoomOut;
			animation-duration:150ms;
			animation-timing-function: ease;
		}

		@keyframes fadeIn {
			0% {opacity: 0;}
			100% {opacity: 1;}
		} 

		@keyframes fadeOut {
			0% {opacity: 1;}
			100% {opacity: 0;}
		} 

		@keyframes zoomIn {
			0% {transform: scale(0.9);}
			100% {transform: scale(1);}
		} 

		@keyframes zoomOut {
			0% {transform: scale(1);}
			100% {transform: scale(0.9);}
		} 
	</style>
	<div id="modal" _="on closeModal add .closing then wait for animationend then remove me">
		<div class="modal-underlay" _="on click trigger closeModal"></div>
		<div class="modal-content bodycolors">
			@component
		</div>
	</div>
}
