name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*' # This will run the workflow on every tag push with versioning format vX.X.X
  workflow_dispatch: # Allows manually triggering the workflow

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v27
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build docker packages
        run: |
          mkdir -p docker/x86_64-linux/
          nix build .#docker.x86_64-linux.default
          cp result docker/x86_64-linux/64-linux-FOOdBAR_IMAGE

      - name: Build other packages
        run: |
          mkdir -p packages/x86_64-linux/
          nix build .#packages.x86_64-linux.default
          cp result/bin/FOOdBAR packages/x86_64-linux/64-linux-FOOdBAR

      - name: Upload docker artifacts
        uses: actions/upload-artifact@v2
        with:
          name: docker
          path: ./docker

      - name: Upload package artifacts
        uses: actions/upload-artifact@v2
        with:
          name: packages
          path: ./packages

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download docker x86_64-linux artifact
        uses: actions/download-artifact@v2
        with:
          name: docker
          path: ./outputs

      - name: Download package x86_64-linux artifact
        uses: actions/download-artifact@v2
        with:
          name: packages
          path: ./outputs

      - name: List contents of cwd
        run: |
          pwd
          ls -la ./
          ls -la ./outputs/docker
          ls -la ./outputs/packages
          ls -la ./outputs/docker/x86_64-linux
          ls -la ./outputs/packages/x86_64-linux

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASEPAT }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload docker x86_64-linux to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASEPAT }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./outputs/docker/x86_64-linux/64-linux-FOOdBAR_IMAGE
          asset_name: 64-linux-FOOdBAR_IMAGE
          asset_content_type: application/octet-stream

      - name: Upload package x86_64-linux to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASEPAT }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./outputs/packages/x86_64-linux/64-linux-FOOdBAR
          asset_name: 64-linux-FOOdBAR
          asset_content_type: application/octet-stream
